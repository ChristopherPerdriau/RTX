swagger: "2.0"
info:
  description: "OpenAPI for RTX"
  version: "1.3.0"
  title: "RTX"
  contact:
    email: "edeutsch@systemsbiology.org"
  license:
    name: "Apache 2.0"
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
host: "rtx.ncats.io"
basePath: "/api/rtx/v1"
externalDocs:
  description: "Documentation for the RTX web service"
  url: "https://rtx.ncats.io/overview.html"
tags:
- name: "translate"
  description: "Translate natural language question into a standardized query"
  externalDocs:
    description: "Documentation for the RTX translate function"
    url: "https://rtx.ncats.io/overview.html#translate"
- name: "query"
  description: "Query RTX using a predefined question type"
  externalDocs:
    description: "Documentation for the RTX query function"
    url: "https://rtx.ncats.io/overview.html#query"
- name: "entity"
  description: "Obtain the CURIE and type of some entity by name"
  externalDocs:
    description: "Documentation for the RTX entity endpoint"
    url: "https://rtx.ncats.io/overview.html#entity"
- name: "PubmedMeshNgd"
  description: "Query to get the Normalized Google Distance between two MeSH terms based on co-occurance in all PubMed article annotations"
  externalDocs:
    description: "Documentation for the RTX PubmedMeshNgd function"
    url: "https://rtx.ncats.io/overview.html#PubmedMeshNgd"
- name: "response"
  description: "Request stored responses and feedback for responses"
  externalDocs:
    description: "Documentation for the RTX response function"
    url: "https://rtx.ncats.io/overview.html#response"
- name: "result"
  description: "Request stored results and feedback for results"
  externalDocs:
    description: "Documentation for the RTX result function"
    url: "https://rtx.ncats.io/overview.html#result"
- name: "exampleQuestions"
  description: "Request a list of example questions that can be answered by the system"
  externalDocs:
    description: "Documentation for the RTX exampleQuestions function"
    url: "https://rtx.ncats.io/overview.html#exampleQuestions"
- name: "feedback"
  description: "Request feedback data"
  externalDocs:
    description: "Documentation for the RTX feedback function"
    url: "https://rtx.ncats.io/overview.html#feedback"
schemes:
- "https"
paths:
  /translate:
    post:
      tags:
      - "translate"
      summary: "Translate natural language question into a standardized query"
      description: ""
      operationId: "translate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Question object that needs to be translated"
        required: true
        schema:
          $ref: "#/definitions/Question"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Query"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "swagger_server.controllers.translate_controller"
  /query:
    post:
      tags:
      - "query"
      summary: "Query RTX using a predefined question type"
      description: ""
      operationId: "query"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Query information to be submitted"
        required: true
        schema:
          $ref: "#/definitions/Query"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "swagger_server.controllers.query_controller"
  /entity/{search_string}:
    get:
      tags:
      - "entity"
      summary: "Obtain the CURIE and type of some entity by name"
      description: ""
      operationId: "get_entity_by_string"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "search_string"
        description: "Some string to search by (name, abbreviation, CURIE, etc.)"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
        404:
          description: "Entity not found"
      x-swagger-router-controller: "swagger_server.controllers.entity_controller"
  /PubmedMeshNgd/{term1}/{term2}:
    get:
      tags:
      - "PubmedMeshNgd"
      summary: "Query to get the Normalized Google Distance between two MeSH terms based on co-occurance in all PubMed article annotations"
      description: ""
      operationId: "PubmedMeshNgd"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "term1"
        description: "First of two terms. Order not important."
        required: true
        type: "string"
      - in: "path"
        name: "term2"
        description: "Second of two terms. Order not important."
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/MeshNgdResponse"
        400:
          description: "Invalid terms"
      x-swagger-router-controller: "swagger_server.controllers.pubmed_mesh_ngd_controller"
  /exampleQuestions:
    get:
      tags:
      - "exampleQuestions"
      summary: "Request a list of example questions that RTX can answer"
      description: ""
      operationId: "example_questions"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
      x-swagger-router-controller: "swagger_server.controllers.example_questions_controller"
  /feedback/ratings:
    get:
      tags:
      - "feedback"
      summary: "Request a list of allowable ratings"
      description: ""
      operationId: "get_feedback_ratings"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
      x-swagger-router-controller: "swagger_server.controllers.feedback_controller"
  /feedback/expertise_levels:
    get:
      tags:
      - "feedback"
      summary: "Request a list of allowable expertise levels"
      description: ""
      operationId: "get_feedback_expertise_levels"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
      x-swagger-router-controller: "swagger_server.controllers.feedback_controller"
  /feedback/all:
    get:
      tags:
      - "feedback"
      summary: "Request a list of all feedback provided thus far"
      description: ""
      operationId: "get_feedback_all"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
      x-swagger-router-controller: "swagger_server.controllers.feedback_controller"
  /response/process:
    post:
      tags:
      - "response"
      summary: "Process a Response object from somewhere else, controlled by options"
      description: ""
      operationId: "post_response"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Envelope for a Response that should be processed"
        required: false
        schema:
          $ref: "#/definitions/ResponseEnvelope"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "swagger_server.controllers.response_controller"
  /response/{response_id}:
    get:
      tags:
      - "response"
      summary: "Request stored responses and results from RTX"
      description: ""
      operationId: "get_response"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "response_id"
        description: "Integer identifier of the response to return"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
        404:
          description: "Response_id not found"
      x-swagger-router-controller: "swagger_server.controllers.response_controller"
  /response/{response_id}/feedback:
    get:
      tags:
      - "response"
      summary: "Request stored feedback for this response from RTX"
      description: ""
      operationId: "get_response_feedback"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "response_id"
        description: "Integer identifier of the response to return"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResponseFeedback"
        404:
          description: "Response_id not found"
      x-swagger-router-controller: "swagger_server.controllers.response_controller"
  /result/{result_id}:
    get:
      tags:
      - "result"
      summary: "Request stored result"
      description: ""
      operationId: "get_result"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "result_id"
        description: "Integer identifier of the result to return"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Result"
        404:
          description: "result_id not found"
      x-swagger-router-controller: "swagger_server.controllers.result_controller"
  /result/{result_id}/feedback:
    get:
      tags:
      - "result"
      summary: "Request stored feedback for this result"
      description: ""
      operationId: "get_result_feedback"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "result_id"
        description: "Integer identifier of the result to return"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultFeedback"
        404:
          description: "result_id not found"
      x-swagger-router-controller: "swagger_server.controllers.result_controller"
    post:
      tags:
      - "result"
      summary: "Store feedback for a particular result"
      description: ""
      operationId: "post_result_feedback"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "result_id"
        description: "Integer identifier of the result to return"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Comment information"
        required: true
        schema:
          $ref: "#/definitions/Feedback"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "swagger_server.controllers.result_controller"
definitions:
  Question:
    type: "object"
    properties:
      text:
        type: "string"
        example: "what genetic conditions offer protection against malaria"
        description: "Free text question"
      language:
        type: "string"
        example: "English"
        description: "Human language in which the question is posed"
        enum:
        - "English"
    additionalProperties: true
  Query:
    type: "object"
    properties:
      original_question:
        type: "string"
        example: "what genetic conditions offer protection against malaria"
        description: "Original question as it was typed in by the user"
      restated_question:
        type: "string"
        example: "Which genetic conditions may offer protection against malaria?"
        description: "Restatement of the question as understood by the translator"
      message:
        type: "string"
        example: "Your question was understood."
        description: "Response from the translation engine to the user"
      known_query_type_id:
        type: "string"
        example: "DEPRECATED"
        description: "DEPRECATED in favor of query_type_id"
      query_type_id:
        type: "string"
        example: "Q1"
        description: "Identifier for the specific query type"
      bypass_cache:
        type: "string"
        example: "true"
        description: "Set to true in order to bypass any possible cached response and try to answer the query over again"
      asynchronous:
        type: "string"
        example: "False"
        description: "Set to true in order to receive an incomplete response_id if the query will take a while. Client can then periodically request that response_id for a status update and eventual complete response"
      options:
        type: "string"
        example: "coalesce=True,threshold=0.9"
        description: "A string of options that can be sent with the query. Options are tool specific and not stipulated here"
      max_results:
        type: "integer"
        example: "100"
        description: "Maximum number of individual results to return"
      page_size:
        type: "integer"
        example: 100
        description: "Split the results into pages with this number of results each"
      page_number:
        type: "integer"
        example: 1
        description: "Page number of results when the number of results exceeds the page_size"
      terms:
        type: "object"
        description: "Dict of terms needed by the specific query type"
        properties:
          disease:
            type: "string"
            example: "malaria"
          protein:
            type: "string"
            example: "P12345"
          anatomical_entity:
            type: "string"
            example: "liver"
          chemical_substance:
            type: "string"
            example: "ibuprofen"
          metabolite:
            type: "string"
            example: "ibuprofen"
        additionalProperties: true
      reasoner_ids:
        type: "array"
        example: [ "RTX", "Robokop", "Indigo" ]
        description: "List of reasoners to consult for the query"
        items:
          type: "string"
      query_plan:
        type: "array"
        example: [ { "node_type": "chemical_substance", "node_name": "ibuprofen" }, { "edge_type": "interacts_with" }, { "node_type": "protein" } ]
        description: "List of node types and edge types in a series that constitute a query plan. Experimental."
        items:
          type: "object"
    additionalProperties: true
  ResponseEnvelope:
    type: "object"
    properties:
      responseURIs:
        type: "array"
        example: [ "https://rtx.ncats.io/api/rtx/v1/response/300" ]
        description: "List of URIs for Response objects to fetch and process"
        items:
          type: "string"
      responses:
        type: "array"
        description: "List of Response objects to process"
        items:
          $ref: "#/definitions/Response"
      options:
        type: "array"
        example: [ "mod45filter", "redirect2RTX" ]
        description: "List of options to guide what happens with the Response object(s)"
        items:
          type: "string"
    additionalProperties: true
  Response:
    type: "object"
    properties:
      context:
        type: "string"
        example: "https://rtx.ncats.io/ns/translator.jsonld"
        description: "JSON-LD context URI"
      type:
        type: "string"
        example: "medical_translator_query_result"
        description: "Entity type of this response"
      id:
        type: "string"
        example: "https://rtx.ncats.io/api/rtx/v1/response/1234"
        description: "URI for this response"
      reasoner_id:
        type: "string"
        example: "RTX"
        description: "Identifier string of the reasoner that provided this response (e.g., RTX, Robokop, Indigo, Integrator)"
      tool_version:
        type: "string"
        example: "RTX 0.4.0"
        description: "Version label of the tool that generated this response"
      schema_version:
        type: "string"
        example: "0.8.0"
        description: "Version label of this JSON-LD schema"
      datetime:
        type: "string"
        example: "2018-01-09 12:34:45"
        description: "ISO standard datetime string for the time that this response was generated"
      original_question_text:
        type: "string"
        example: "what proteins are affected by sickle cell anemia"
        description: "The original question text typed in by the user"
      restated_question_text:
        type: "string"
        example: "Which proteins are affected by sickle cell anemia?"
        description: "A precise restatement of the question, as understood by the Translator, for which the answer applies. The user should verify that the restated question matches the intent of their original question (it might not)."
      known_query_type_id:
        type: "string"
        example: "DEPRECATED"
        description: "DEPRECATED"
      query_type_id:
        type: "string"
        example: "Q2"
        description: "The query type id if one is known for the query/response (as defined in https://docs.google.com/spreadsheets/d/18zW81wteUfOn3rFRVG0z8mW-ecNhdsfD_6s73ETJnUw/edit#gid=1742835901 )"
      terms:
        type: "object"
        example: "{ 'disease': 'malaria' }"
        description: "The is string of the query type id if one is known for the query/response"
      n_results:
        type: "integer"
        example: 42
        description: "Total number of results in the response (which may be less than what is returned if limits were placed on the results to return)"
      response_code:
        type: "string"
        example: "OK"
        description: "Set to OK for success, or some other short string to indicate and error (e.g., KGUnavailable, TermNotFound, etc.)"
      result_code:
        type: "string"
        example: "OK"
        description: "DEPRECATED"
      message:
        type: "string"
        example: "1 answer found"
        description: "Extended message denoting the success or mode of failure for the response"
      table_column_names:
        type: "array"
        example: [ "chemical_substance.name", "chemical_substance.id" ]
        description: "List of column names that corresponds to the row_data for each result"
        items:
          type: "string"
      result_list:
        type: "array"
        items:
          $ref: "#/definitions/Result"
    additionalProperties: true
  Result:
    type: "object"
    description: "One of potentially several results or answers for a query"
    properties:
      id:
        type: "string"
        example: "https://rtx.ncats.io/api/rtx/v1/result/2345"
        description: "URI for this response"
      description:
        type: "string"
        example: "The genetic condition sickle cell anemia may provide protection\
          \ from cerebral malaria via genetic alterations of proteins HBB (P68871)\
          \ and HMOX1 (P09601)."
        description: "A free text description of this result answer from the reasoner"
      text:
        type: "string"
        example: "DEPRECATED"
        description: "DEPRECATED"
      essence:
        type: "string"
        example: "ibuprofen"
        description: "A single string that is the terse essence of the result (useful for simple answers)"
      row_data:
        type: "array"
        example: [ "ibuprofen", "CHEMBL:CHEMBL521" ]
        description: "An arbitrary list of values that captures the essence of the result that can be turned into a tabular result across all answers (each result is a row) for a user that wants tabular output"
        items:
          type: "string"
      score:
        type: "number"
        format: "float"
        example: 163.233
        description: "Any type of score associated with this result (highest confidence)"
      score_name:
        type: "string"
        example: "Jaccard distance"
        description: "Name for the score"
      score_direction:
        type: "string"
        example: "Jaccard distance"
        description: "Sorting indicator for the score: one of higher_is_better or lower_is_better"
      confidence:
        type: "number"
        format: "float"
        example: 0.9234
        description: "Confidence metric for this result, a value 0.0 (no confidence) and 1.0 (highest confidence)"
      result_type:
        type: "string"
        example: "answer"
        description: "One of several possible result types: 'individual query answer', 'neighborhood graph', 'type summary graph'"
      result_group:
        type: "integer"
        example: "1"
        description: "An integer group number for results for use in cases where several results should be grouped together. Also useful to control sorting ascending."
      result_group_similarity_score:
        type: "number"
        format: "float"
        example: 0.95
        description: "A score that denotes the similarity of this result to other members of the result_group"
      reasoner_id:
        type: "string"
        example: "RTX"
        description: "Identifier string of the reasoner that provided this result (e.g., RTX, Robokop, Indigo, Integrator)"
      result_graph:
        $ref: "#/definitions/Result_graph"
    additionalProperties: true
  Result_graph:
    type: "object"
    description: "A thought graph associated with this result. This will commonly be a linear path subgraph from one concept to another, but related items aside of the path may be included."
    properties:
      node_list:
        type: "array"
        items:
          $ref: "#/definitions/Node"
      edge_list:
        type: "array"
        items:
          $ref: "#/definitions/Edge"
    additionalProperties: true
  Node:
    type: "object"
    description: "A node in the thought subgraph"
    properties:
      id:
        type: "string"
        example: "OMIM:603903"
        description: "CURIE identifier for this node"
      uri:
        type: "string"
        example: "https://www.uniprot.org/uniprot/P00738"
        description: URI identifier for this node"
      name:
        type: "string"
        example: "Haptoglobin"
        description: "Formal name of the entity"
      type:
        type: "string"
        example: "protein"
        description: "Entity type of this node (e.g., protein, disease, etc.)"
      description:
        type: "string"
        example: "Haptoglobin captures, and combines with free plasma hemoglobin..."
        description: "One to three sentences of description/definition of this entity"
      symbol:
        type: "string"
        example: "HP"
        description: "Short abbreviation or symbol for this entity"
      node_attributes:
        type: "array"
        description: "A list of arbitrary attributes for the node"
        items:
          $ref: "#/definitions/Node_attribute"
    additionalProperties: true
  Node_attribute:
    type: "object"
    description: "A generic attribute for a node"
    properties:
      type:
        type: "string"
        example: "article"
        description: "Entity type of this attribute"
      name:
        type: "string"
        example: "Wikipedia article"
        description: "Formal name of the attribute"
      value:
        type: "string"
        example: "7.23e-12"
        description: "Value of the attribute"
      url:
        type: "string"
        example: "https://en.wikipedia.org/wiki/Malaria"
        description: "A URL corresponding to this attribute"
    additionalProperties: true
  Edge:
    type: "object"
    description: "An edge in the thought subgraph linking two nodes"
    properties:
      type:
        type: "string"
        example: "affects"
        description: "Higher-level relationship type of this edge"
      relation:
        type: "string"
        example: "affects"
        description: "Lower-level relationship type of this edge"
      source_id:
        type: "string"
        example: "https://omim.org/entry/603903"
        description: "Corresponds to the @id of source node of this edge"
      target_id:
        type: "string"
        example: "https://www.uniprot.org/uniprot/P00738"
        description: "Corresponds to the @id of target node of this edge"
      is_defined_by:
        type: "string"
        example: "RTX"
        description: "A CURIE/URI for the translator group that made the KG"
      provided_by:
        type: "string"
        example: "OMIM"
        description: "A CURIE/URI for the knowledge source that defined this edge"
      confidence:
        type: "number"
        format: "float"
        example: 0.99
        description: "Confidence metric for this edge, a value 0.0 (no confidence) and 1.0 (highest confidence)"
      publications:
        type: "string"
        example: "PubMed:12345562"
        description: "A CURIE/URI for publications associated with this edge"
      evidence_type:
        type: "string"
        example: "ECO:0000220"
        description: "A CURIE/URI for class of evidence supporting the statement made in an edge - typically a class from the ECO ontology"
      qualifiers:
        type: "string"
        example: "ECO:0000220"
        description: "Terms representing qualifiers that modify or qualify the meaning of the statement made in an edge"
      negated:
        type: "boolean"
        example: "true"
        description: "Boolean that if set to true, indicates the edge statement is negated i.e. is not true"
      attribute_list:
        type: "array"
        description: "A list of additional attributes for this edge"
        items:
          $ref: "#/definitions/Edge_attribute"
    additionalProperties: true
  Edge_attribute:
    type: "object"
    description: "A generic additional attribute for an edge"
    properties:
      type:
        type: "string"
        example: "localization"
        description: "Entity type of this attribute"
      name:
        type: "string"
        example: "Cell type limitation"
        description: "Formal name of the attribute"
      value:
        type: "string"
        example: "MFC cells"
        description: "Value of the attribute. While all attributes should have a name, many will not have a value"
      url:
        type: "string"
        example: "https://www.ncbi.nlm.nih.gov/pubmed/29309293"
        description: "A URL corresponding to this attribute"
    additionalProperties: true
  Feedback:
    type: "object"
    description: "A single unit of Feedback"
    properties:
      id:
        type: "string"
        example: "https://rtx.ncats.io/api/rtx/v1/result/2345/feedback/4567"
        description: "URI for this feedback item"
      result_id:
        type: "string"
        example: "https://rtx.ncats.io/api/rtx/v1/result/2345"
        description: "URI for the result that this feedback corresponds to"
      expertise_level_id:
        type: "integer"
        example: "1"
        description: "Integer identifier of the claimed expertise level"
      rating_id:
        type: "integer"
        example: "1"
        description: "Integer identifier of the applied rating"
      commenter_id:
        type: "integer"
        example: "1"
        description: "Integer identifier of the commenter"
      commenter_full_name:
        type: "string"
        example: "John Smith"
        description: "Full name of the commenter"
      datetime:
        type: "string"
        example: "2018-05-08 12:00"
        description: "Datetime when the feedback was provided"
      comment:
        type: "string"
        example: "This is a great result because..."
        description: "A free text comment about this result"
  ResultFeedback:
    type: "object"
    description: "Feedback for one result"
    properties:
      feedback_list:
        type: "array"
        items:
          $ref: "#/definitions/Feedback"
  ResponseFeedback:
    type: "object"
    description: "Feedback for all the results corresponding to this response"
    properties:
      feedback_list:
        type: "array"
        items:
          $ref: "#/definitions/Feedback"
  MeshNgdResponse:
    type: "object"
    properties:
      result_code:
        type: "string"
        example: "TermNotFound"
        description: "Set to OK for success, or some other short string to indicate and error (e.g., TermNotFound, etc.)"
      message:
        type: "string"
        example: "Term 1 'malria' not found in MeSH"
        description: "Extended message denoting the success or mode of failure for request"
      value:
        type: "number"
        format: "float"
        description: "Calculated Normalized Google Distance for the two supplied terms"
        example: 0.714
