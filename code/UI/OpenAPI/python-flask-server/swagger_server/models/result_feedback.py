# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ResultFeedback(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, result_id: str=None, expertise_level_id: int=None, rating_id: int=None, comment: str=None):  # noqa: E501
        """ResultFeedback - a model defined in Swagger

        :param id: The id of this ResultFeedback.  # noqa: E501
        :type id: str
        :param result_id: The result_id of this ResultFeedback.  # noqa: E501
        :type result_id: str
        :param expertise_level_id: The expertise_level_id of this ResultFeedback.  # noqa: E501
        :type expertise_level_id: int
        :param rating_id: The rating_id of this ResultFeedback.  # noqa: E501
        :type rating_id: int
        :param comment: The comment of this ResultFeedback.  # noqa: E501
        :type comment: str
        """
        self.swagger_types = {
            'id': str,
            'result_id': str,
            'expertise_level_id': int,
            'rating_id': int,
            'comment': str
        }

        self.attribute_map = {
            'id': 'id',
            'result_id': 'result_id',
            'expertise_level_id': 'expertise_level_id',
            'rating_id': 'rating_id',
            'comment': 'comment'
        }

        self._id = id
        self._result_id = result_id
        self._expertise_level_id = expertise_level_id
        self._rating_id = rating_id
        self._comment = comment

    @classmethod
    def from_dict(cls, dikt) -> 'ResultFeedback':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResultFeedback of this ResultFeedback.  # noqa: E501
        :rtype: ResultFeedback
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this ResultFeedback.

        URI for this feedback item  # noqa: E501

        :return: The id of this ResultFeedback.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this ResultFeedback.

        URI for this feedback item  # noqa: E501

        :param id: The id of this ResultFeedback.
        :type id: str
        """

        self._id = id

    @property
    def result_id(self) -> str:
        """Gets the result_id of this ResultFeedback.

        URI for the result that this feedback corresponds to  # noqa: E501

        :return: The result_id of this ResultFeedback.
        :rtype: str
        """
        return self._result_id

    @result_id.setter
    def result_id(self, result_id: str):
        """Sets the result_id of this ResultFeedback.

        URI for the result that this feedback corresponds to  # noqa: E501

        :param result_id: The result_id of this ResultFeedback.
        :type result_id: str
        """

        self._result_id = result_id

    @property
    def expertise_level_id(self) -> int:
        """Gets the expertise_level_id of this ResultFeedback.

        Identifier of the claimed expertise level  # noqa: E501

        :return: The expertise_level_id of this ResultFeedback.
        :rtype: int
        """
        return self._expertise_level_id

    @expertise_level_id.setter
    def expertise_level_id(self, expertise_level_id: int):
        """Sets the expertise_level_id of this ResultFeedback.

        Identifier of the claimed expertise level  # noqa: E501

        :param expertise_level_id: The expertise_level_id of this ResultFeedback.
        :type expertise_level_id: int
        """

        self._expertise_level_id = expertise_level_id

    @property
    def rating_id(self) -> int:
        """Gets the rating_id of this ResultFeedback.

        Identifier of the applied rating  # noqa: E501

        :return: The rating_id of this ResultFeedback.
        :rtype: int
        """
        return self._rating_id

    @rating_id.setter
    def rating_id(self, rating_id: int):
        """Sets the rating_id of this ResultFeedback.

        Identifier of the applied rating  # noqa: E501

        :param rating_id: The rating_id of this ResultFeedback.
        :type rating_id: int
        """

        self._rating_id = rating_id

    @property
    def comment(self) -> str:
        """Gets the comment of this ResultFeedback.

        A free text comment about this result  # noqa: E501

        :return: The comment of this ResultFeedback.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment: str):
        """Sets the comment of this ResultFeedback.

        A free text comment about this result  # noqa: E501

        :param comment: The comment of this ResultFeedback.
        :type comment: str
        """

        self._comment = comment
