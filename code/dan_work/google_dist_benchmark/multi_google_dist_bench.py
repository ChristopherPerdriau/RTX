import sys
sys.path.append('../../reasoningtool/QuestionAnswering')
sys.path.append("../../reasoningtool/kg-construction")
sys.path.append('../../improved_ngd_comp')
sys.path.append('./old_code_for_benchmark_purpose')

from ReasoningUtilities import weight_graph_with_google_distance
from RTXConfiguration import RTXConfiguration
from bench_mark_decorator import bench_harness
from time import time
from QueryNCBIeUtils import QueryNCBIeUtils as new_NCBI
from old_NCBIeUtils import QueryNCBIeUtils  as old_NCBI
from XMLExtractor import XMLExtractor
from bench_mark_decorator import bench_harness
"""
	Name: GoogleDistBenchmark
	Author: Daniel Lin
	Description:
		This class contain functions that
		benchmarks the old normalized google
		distance with the new normalized
		google distance.
"""
class GoogleDistBenchmark:
	"""
		name: regular_google_dist_benchmark
		input:
			list_of_terms: list of mesh terms
		output: None
		description:
			benchmark for regular google distance
	"""
	@bench_harness(file_name='reg_goog_dist_time', fun_name='reg_goog_dist')
	def regular_google_dist_benchmark(self, list_of_terms):
		print("+++++++ TESTING UNOPTIMIZED GOOGLE DIST FUN ++++++++")
		ngd = 0
		mesh_term_flags = [True]*len(list_of_terms)
		ngd = old_NCBI.multi_normalized_google_distance(list_of_terms, mesh_term_flags)
		print(ngd)
		print("Without optimization time (seconds)")
	"""
		name: get_list_of_terms
		input: None
		output: None
		description:
			Get list of mesh terms
	"""
	def get_list_of_terms(self):
		list_of_terms = []
		test_data_set = open("./bench_mark_data/test_data_set2.txt")
		while True:
			line1 = test_data_set.readline().strip()
			line2 = test_data_set.readline().strip()
			if not line2:
				break
			list_of_terms.extend([line1, line2])
		test_data_set.close()
		return list_of_terms
	"""
		name: improved_google_dist_benchmark
		input:
			list_of_terms: list of mesh terms
			pmid_mesh_dict: mesh dict generated by
			Spark loader
		output: None
		description:
			benchmarking function for improved_google_dist function
	"""
	@bench_harness(file_name='improved_goog_dist_time', fun_name='improved_goog_dist')
	def improved_google_dist_benchmark(self, list_of_terms, pmid_mesh_dict):
		print("+++++++ TESTING OPTIMIZED GOOGLE DIST FUN ++++++++")
		ngd = 0
		ngd = new_NCBI.multi_normalized_google_distance(list_of_terms, pmid_mesh_dict)
if __name__ == '__main__':
	xml_extractor = XMLExtractor()
	google_dist = GoogleDistBenchmark()
	# Load up testing data set
	print("+++++++ LOADING UP TESTING DATA ++++++++")
	list_of_terms = google_dist.get_list_of_terms()
	# get uid_dict and pmid_mesh_dict from pubmed dataset
	print("+++++++ LOADING UP PYTHON DICT ++++++++")
	uid_dict, pmid_mesh_dict = xml_extractor.XML_main()
	print("+++++++ FINISHED LOADING UP TESTING DATA++++++++")
	google_dist.regular_google_dist_benchmark(list_of_terms)
	google_dist.improved_google_dist_benchmark(list_of_terms, pmid_mesh_dict)
	#google_dist.write_result(time1, time2, 1)
	print("+++++++ TESTING COMPLETE ++++++++")
