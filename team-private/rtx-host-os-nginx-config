map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;
    server_name arax.rtx.ai;
    return 302 https://$host$request_uri;
}

server {
    listen 443 ssl;
    ssl on;

    server_name arax.rtx.ai;
    root /etc/nginx/www;

    ssl_certificate             /etc/letsencrypt/live/arax.rtx.ai/fullchain.pem;
    ssl_certificate_key         /etc/letsencrypt/live/arax.rtx.ai/privkey.pem;
    ssl_protocols               TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve              secp384r1;
    ssl_session_timeout         1d;
    ssl_session_cache           shared:SSL:50m;
    ssl_dhparam                 /etc/nginx/dhparam.pem;
    ssl_stapling                on;
    ssl_stapling_verify         on;

    add_header    Strict-Transport-Security   max-age=15768000;

    server_tokens         off;

    location / {
        add_header 'X-Frame-Options' 'SAMEORIGIN';
        add_header 'Access-Control-Allow-Origin' '*';
	proxy_read_timeout 3000s;

	include proxy_params;
	proxy_pass http://localhost:8080;
	proxy_set_header  X-Forwarded-Proto $scheme;
	proxy_set_header  X-Real-IP         $remote_addr;
	proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
	proxy_set_header  X-Real-IP-AWS	    $remote_addr;
    }
}

